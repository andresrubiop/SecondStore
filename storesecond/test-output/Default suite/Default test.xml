<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="EQUIPO-ANDRES" name="Default test" tests="66" failures="0" timestamp="6 Jan 2017 18:03:50 GMT" time="2.653" errors="0">
  <testcase name="@BeforeClass springTestContextPrepareTestInstance" time="0.0" classname="com.stores.app.storesecond.dao.BrandDaoImplTest">
    <failure type="org.springframework.beans.factory.BeanCreationException" message="Error creating bean with name &amp;apos;com.stores.app.storesecond.dao.BrandDaoImplTest&amp;apos;: Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire field: com.stores.app.storesecond.dao.BrandDao com.stores.app.storesecond.dao.BrandDaoImplTest.brandDao; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [com.stores.app.storesecond.dao.BrandDao] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}">
      <![CDATA[org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.stores.app.storesecond.dao.BrandDaoImplTest': Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire field: com.stores.app.storesecond.dao.BrandDao com.stores.app.storesecond.dao.BrandDaoImplTest.brandDao; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [com.stores.app.storesecond.dao.BrandDao] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireBeanProperties(AbstractAutowireCapableBeanFactory.java:384)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:110)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:75)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:331)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextPrepareTestInstance(AbstractTestNGSpringContextTests.java:146)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:517)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:140)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:170)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:104)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
Caused by: org.springframework.beans.factory.BeanCreationException: Could not autowire field: com.stores.app.storesecond.dao.BrandDao com.stores.app.storesecond.dao.BrandDaoImplTest.brandDao; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [com.stores.app.storesecond.dao.BrandDao] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:87)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:289)
	... 30 more
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [com.stores.app.storesecond.dao.BrandDao] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoSuchBeanDefinitionException(DefaultListableBeanFactory.java:1103)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:963)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:858)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:480)
	... 32 more
]]>
    </failure>
  </testcase> <!-- @BeforeClass springTestContextPrepareTestInstance -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.stores.app.storesecond.dao.BrandDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.stores.app.storesecond.dao.BrandDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.stores.app.storesecond.dao.BrandDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.stores.app.storesecond.dao.BrandDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.stores.app.storesecond.dao.BrandDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.stores.app.storesecond.dao.BrandDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.stores.app.storesecond.dao.BrandDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.stores.app.storesecond.dao.BrandDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.stores.app.storesecond.dao.BrandDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.stores.app.storesecond.dao.BrandDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.stores.app.storesecond.dao.BrandDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.stores.app.storesecond.dao.BrandDaoImplTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="deleteBrandById" time="0.031" classname="com.stores.app.storesecond.service.BrandServiceImplTest"/>
  <testcase name="findAllBrands" time="0.007" classname="com.stores.app.storesecond.service.BrandServiceImplTest"/>
  <testcase name="findBrandById" time="0.002" classname="com.stores.app.storesecond.service.BrandServiceImplTest"/>
  <testcase name="findById" time="0.002" classname="com.stores.app.storesecond.service.BrandServiceImplTest"/>
  <testcase name="saveBrand" time="0.002" classname="com.stores.app.storesecond.service.BrandServiceImplTest"/>
  <testcase name="updateBrand" time="0.002" classname="com.stores.app.storesecond.service.BrandServiceImplTest"/>
  <testcase name="deleteBrand" time="0.002" classname="com.stores.app.storesecond.controller.AppControllerTest"/>
  <testcase name="deleteCategory" time="0.002" classname="com.stores.app.storesecond.controller.AppControllerTest"/>
  <testcase name="deleteColour" time="0.002" classname="com.stores.app.storesecond.controller.AppControllerTest"/>
  <testcase name="deleteItem" time="0.002" classname="com.stores.app.storesecond.controller.AppControllerTest"/>
  <testcase name="deleteUser" time="0.002" classname="com.stores.app.storesecond.controller.AppControllerTest"/>
  <testcase name="editBrand" time="0.039" classname="com.stores.app.storesecond.controller.AppControllerTest"/>
  <testcase name="editCategory" time="0.002" classname="com.stores.app.storesecond.controller.AppControllerTest"/>
  <testcase name="editColour" time="0.002" classname="com.stores.app.storesecond.controller.AppControllerTest"/>
  <testcase name="editItem" time="0.002" classname="com.stores.app.storesecond.controller.AppControllerTest"/>
  <testcase name="editUser" time="0.001" classname="com.stores.app.storesecond.controller.AppControllerTest"/>
  <testcase name="listBrands" time="0.001" classname="com.stores.app.storesecond.controller.AppControllerTest"/>
  <testcase name="listCategories" time="0.002" classname="com.stores.app.storesecond.controller.AppControllerTest"/>
  <testcase name="listColours" time="0.001" classname="com.stores.app.storesecond.controller.AppControllerTest"/>
  <testcase name="listItems" time="0.002" classname="com.stores.app.storesecond.controller.AppControllerTest"/>
  <testcase name="listUsers" time="0.001" classname="com.stores.app.storesecond.controller.AppControllerTest"/>
  <testcase name="newBrand" time="0.001" classname="com.stores.app.storesecond.controller.AppControllerTest"/>
  <testcase name="newCategory" time="0.001" classname="com.stores.app.storesecond.controller.AppControllerTest"/>
  <testcase name="newColour" time="0.001" classname="com.stores.app.storesecond.controller.AppControllerTest"/>
  <testcase name="newItem" time="0.001" classname="com.stores.app.storesecond.controller.AppControllerTest"/>
  <testcase name="newUser" time="0.001" classname="com.stores.app.storesecond.controller.AppControllerTest"/>
  <testcase name="saveBrandWithValidationError" time="0.002" classname="com.stores.app.storesecond.controller.AppControllerTest"/>
  <testcase name="saveCategoryWithValidationError" time="0.001" classname="com.stores.app.storesecond.controller.AppControllerTest"/>
  <testcase name="saveColourWithValidationError" time="0.001" classname="com.stores.app.storesecond.controller.AppControllerTest"/>
  <testcase name="saveItemWithValidationError" time="0.001" classname="com.stores.app.storesecond.controller.AppControllerTest"/>
  <testcase name="saveUserWithValidationError" time="0.0" classname="com.stores.app.storesecond.controller.AppControllerTest"/>
  <testcase name="updateBrandWithValidationError" time="0.001" classname="com.stores.app.storesecond.controller.AppControllerTest"/>
  <testcase name="updateCategoryWithValidationError" time="0.001" classname="com.stores.app.storesecond.controller.AppControllerTest"/>
  <testcase name="updateColourWithValidationError" time="0.002" classname="com.stores.app.storesecond.controller.AppControllerTest"/>
  <testcase name="updateItemWithValidationError" time="0.002" classname="com.stores.app.storesecond.controller.AppControllerTest"/>
  <testcase name="updateUserWithValidationError" time="0.001" classname="com.stores.app.storesecond.controller.AppControllerTest"/>
  <testcase name="deleteBrandById" time="0.002" classname="com.stores.app.storesecond.service.CategoryServiceImplTest"/>
  <testcase name="findAllCategories" time="0.001" classname="com.stores.app.storesecond.service.CategoryServiceImplTest"/>
  <testcase name="findById" time="0.002" classname="com.stores.app.storesecond.service.CategoryServiceImplTest"/>
  <testcase name="findCategoryById" time="0.001" classname="com.stores.app.storesecond.service.CategoryServiceImplTest"/>
  <testcase name="saveCategory" time="0.001" classname="com.stores.app.storesecond.service.CategoryServiceImplTest"/>
  <testcase name="updateCategory" time="0.002" classname="com.stores.app.storesecond.service.CategoryServiceImplTest"/>
  <testcase name="deleteBrandById" time="0.001" classname="com.stores.app.storesecond.dao.BrandDaoImplTest">
    <skipped/>
  </testcase> <!-- deleteBrandById -->
  <testcase name="deleteBrandByInvalidId" time="0.001" classname="com.stores.app.storesecond.dao.BrandDaoImplTest">
    <skipped/>
  </testcase> <!-- deleteBrandByInvalidId -->
  <testcase name="findAllBrands" time="0.0" classname="com.stores.app.storesecond.dao.BrandDaoImplTest">
    <skipped/>
  </testcase> <!-- findAllBrands -->
  <testcase name="findBrandById" time="0.001" classname="com.stores.app.storesecond.dao.BrandDaoImplTest">
    <skipped/>
  </testcase> <!-- findBrandById -->
  <testcase name="findById" time="0.0" classname="com.stores.app.storesecond.dao.BrandDaoImplTest">
    <skipped/>
  </testcase> <!-- findById -->
  <testcase name="saveBrand" time="0.0" classname="com.stores.app.storesecond.dao.BrandDaoImplTest">
    <skipped/>
  </testcase> <!-- saveBrand -->
  <testcase name="deleteColourById" time="0.001" classname="com.stores.app.storesecond.service.ColourServiceImplTest"/>
  <testcase name="findAllColours" time="0.001" classname="com.stores.app.storesecond.service.ColourServiceImplTest"/>
  <testcase name="findById" time="0.001" classname="com.stores.app.storesecond.service.ColourServiceImplTest"/>
  <testcase name="findColourById" time="0.001" classname="com.stores.app.storesecond.service.ColourServiceImplTest"/>
  <testcase name="saveColour" time="0.001" classname="com.stores.app.storesecond.service.ColourServiceImplTest"/>
  <testcase name="updateColour" time="0.001" classname="com.stores.app.storesecond.service.ColourServiceImplTest"/>
  <testcase name="deleteColourById" time="0.001" classname="com.stores.app.storesecond.service.ItemServiceImplTest"/>
  <testcase name="findAllItems" time="0.001" classname="com.stores.app.storesecond.service.ItemServiceImplTest"/>
  <testcase name="findById" time="0.001" classname="com.stores.app.storesecond.service.ItemServiceImplTest"/>
  <testcase name="findItemById" time="0.001" classname="com.stores.app.storesecond.service.ItemServiceImplTest"/>
  <testcase name="saveItem" time="0.001" classname="com.stores.app.storesecond.service.ItemServiceImplTest"/>
  <testcase name="updateItem" time="0.001" classname="com.stores.app.storesecond.service.ItemServiceImplTest"/>
  <testcase name="deleteUserById" time="0.002" classname="com.stores.app.storesecond.service.UserServiceImplTest"/>
  <testcase name="findAllUsers" time="0.001" classname="com.stores.app.storesecond.service.UserServiceImplTest"/>
  <testcase name="findById" time="0.001" classname="com.stores.app.storesecond.service.UserServiceImplTest"/>
  <testcase name="findUserById" time="0.001" classname="com.stores.app.storesecond.service.UserServiceImplTest"/>
  <testcase name="saveColour" time="0.001" classname="com.stores.app.storesecond.service.UserServiceImplTest"/>
  <testcase name="updateUser" time="0.001" classname="com.stores.app.storesecond.service.UserServiceImplTest"/>
</testsuite> <!-- Default test -->
