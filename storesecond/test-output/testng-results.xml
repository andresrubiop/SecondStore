<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="6" failed="0" total="66" passed="60">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="2653" started-at="2017-01-06T18:03:47Z" finished-at="2017-01-06T18:03:50Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="2653" started-at="2017-01-06T18:03:47Z" finished-at="2017-01-06T18:03:50Z">
      <class name="com.stores.app.storesecond.service.ColourServiceImplTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.stores.app.storesecond.service.ColourServiceImplTest@4b425577]" name="setUp" is-config="true" duration-ms="6" started-at="2017-01-06T19:03:50Z" finished-at="2017-01-06T19:03:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="deleteColourById()[pri:0, instance:com.stores.app.storesecond.service.ColourServiceImplTest@4b425577]" name="deleteColourById" duration-ms="1" started-at="2017-01-06T19:03:50Z" finished-at="2017-01-06T19:03:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteColourById -->
        <test-method status="PASS" signature="findAllColours()[pri:0, instance:com.stores.app.storesecond.service.ColourServiceImplTest@4b425577]" name="findAllColours" duration-ms="1" started-at="2017-01-06T19:03:50Z" finished-at="2017-01-06T19:03:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findAllColours -->
        <test-method status="PASS" signature="findById()[pri:0, instance:com.stores.app.storesecond.service.ColourServiceImplTest@4b425577]" name="findById" duration-ms="1" started-at="2017-01-06T19:03:50Z" finished-at="2017-01-06T19:03:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findById -->
        <test-method status="PASS" signature="findColourById()[pri:0, instance:com.stores.app.storesecond.service.ColourServiceImplTest@4b425577]" name="findColourById" duration-ms="1" started-at="2017-01-06T19:03:50Z" finished-at="2017-01-06T19:03:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findColourById -->
        <test-method status="PASS" signature="saveColour()[pri:0, instance:com.stores.app.storesecond.service.ColourServiceImplTest@4b425577]" name="saveColour" duration-ms="1" started-at="2017-01-06T19:03:50Z" finished-at="2017-01-06T19:03:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- saveColour -->
        <test-method status="PASS" signature="updateColour()[pri:0, instance:com.stores.app.storesecond.service.ColourServiceImplTest@4b425577]" name="updateColour" duration-ms="1" started-at="2017-01-06T19:03:50Z" finished-at="2017-01-06T19:03:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateColour -->
      </class> <!-- com.stores.app.storesecond.service.ColourServiceImplTest -->
      <class name="com.stores.app.storesecond.service.ItemServiceImplTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.stores.app.storesecond.service.ItemServiceImplTest@63a9c661]" name="setUp" is-config="true" duration-ms="7" started-at="2017-01-06T19:03:50Z" finished-at="2017-01-06T19:03:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="deleteColourById()[pri:0, instance:com.stores.app.storesecond.service.ItemServiceImplTest@63a9c661]" name="deleteColourById" duration-ms="1" started-at="2017-01-06T19:03:50Z" finished-at="2017-01-06T19:03:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteColourById -->
        <test-method status="PASS" signature="findAllItems()[pri:0, instance:com.stores.app.storesecond.service.ItemServiceImplTest@63a9c661]" name="findAllItems" duration-ms="1" started-at="2017-01-06T19:03:50Z" finished-at="2017-01-06T19:03:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findAllItems -->
        <test-method status="PASS" signature="findById()[pri:0, instance:com.stores.app.storesecond.service.ItemServiceImplTest@63a9c661]" name="findById" duration-ms="1" started-at="2017-01-06T19:03:50Z" finished-at="2017-01-06T19:03:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findById -->
        <test-method status="PASS" signature="findItemById()[pri:0, instance:com.stores.app.storesecond.service.ItemServiceImplTest@63a9c661]" name="findItemById" duration-ms="1" started-at="2017-01-06T19:03:50Z" finished-at="2017-01-06T19:03:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findItemById -->
        <test-method status="PASS" signature="saveItem()[pri:0, instance:com.stores.app.storesecond.service.ItemServiceImplTest@63a9c661]" name="saveItem" duration-ms="1" started-at="2017-01-06T19:03:50Z" finished-at="2017-01-06T19:03:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- saveItem -->
        <test-method status="PASS" signature="updateItem()[pri:0, instance:com.stores.app.storesecond.service.ItemServiceImplTest@63a9c661]" name="updateItem" duration-ms="1" started-at="2017-01-06T19:03:50Z" finished-at="2017-01-06T19:03:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateItem -->
      </class> <!-- com.stores.app.storesecond.service.ItemServiceImplTest -->
      <class name="com.stores.app.storesecond.dao.BrandDaoImplTest">
        <test-method status="FAIL" signature="springTestContextPrepareTestInstance()[pri:0, instance:com.stores.app.storesecond.dao.BrandDaoImplTest@50085d9c]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2017-01-06T19:03:48Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2017-01-06T19:03:48Z">
          <exception class="org.springframework.beans.factory.BeanCreationException">
            <message>
              <![CDATA[Error creating bean with name 'com.stores.app.storesecond.dao.BrandDaoImplTest': Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire field: com.stores.app.storesecond.dao.BrandDao com.stores.app.storesecond.dao.BrandDaoImplTest.brandDao; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [com.stores.app.storesecond.dao.BrandDao] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.stores.app.storesecond.dao.BrandDaoImplTest': Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire field: com.stores.app.storesecond.dao.BrandDao com.stores.app.storesecond.dao.BrandDaoImplTest.brandDao; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [com.stores.app.storesecond.dao.BrandDao] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:292)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireBeanProperties(AbstractAutowireCapableBeanFactory.java:384)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:110)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:75)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:331)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextPrepareTestInstance(AbstractTestNGSpringContextTests.java:146)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:517)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:140)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:170)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:104)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
Caused by: org.springframework.beans.factory.BeanCreationException: Could not autowire field: com.stores.app.storesecond.dao.BrandDao com.stores.app.storesecond.dao.BrandDaoImplTest.brandDao; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [com.stores.app.storesecond.dao.BrandDao] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:87)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:289)
	... 30 more
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [com.stores.app.storesecond.dao.BrandDao] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoSuchBeanDefinitionException(DefaultListableBeanFactory.java:1103)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:963)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:858)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:480)
	... 32 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.beans.factory.BeanCreationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:com.stores.app.storesecond.dao.BrandDaoImplTest@50085d9c]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2017-01-06T19:03:48Z" finished-at="2017-01-06T19:03:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.stores.app.storesecond.dao.BrandDaoImplTest@50085d9c]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-06T19:03:50Z" finished-at="2017-01-06T19:03:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.stores.app.storesecond.dao.BrandDaoImplTest@50085d9c]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-06T19:03:50Z" finished-at="2017-01-06T19:03:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="deleteBrandById()[pri:0, instance:com.stores.app.storesecond.dao.BrandDaoImplTest@50085d9c]" name="deleteBrandById" duration-ms="1" started-at="2017-01-06T19:03:50Z" finished-at="2017-01-06T19:03:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBrandById -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.stores.app.storesecond.dao.BrandDaoImplTest@50085d9c]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="3" started-at="2017-01-06T19:03:50Z" finished-at="2017-01-06T19:03:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.stores.app.storesecond.dao.BrandDaoImplTest.deleteBrandById()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.stores.app.storesecond.dao.BrandDaoImplTest@50085d9c]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-06T19:03:50Z" finished-at="2017-01-06T19:03:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.stores.app.storesecond.dao.BrandDaoImplTest@50085d9c]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-06T19:03:50Z" finished-at="2017-01-06T19:03:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="deleteBrandByInvalidId()[pri:0, instance:com.stores.app.storesecond.dao.BrandDaoImplTest@50085d9c]" name="deleteBrandByInvalidId" duration-ms="1" started-at="2017-01-06T19:03:50Z" finished-at="2017-01-06T19:03:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBrandByInvalidId -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.stores.app.storesecond.dao.BrandDaoImplTest@50085d9c]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-01-06T19:03:50Z" finished-at="2017-01-06T19:03:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.stores.app.storesecond.dao.BrandDaoImplTest.deleteBrandByInvalidId()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.stores.app.storesecond.dao.BrandDaoImplTest@50085d9c]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-06T19:03:50Z" finished-at="2017-01-06T19:03:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="findAllBrands()[pri:0, instance:com.stores.app.storesecond.dao.BrandDaoImplTest@50085d9c]" name="findAllBrands" duration-ms="0" started-at="2017-01-06T19:03:50Z" finished-at="2017-01-06T19:03:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findAllBrands -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.stores.app.storesecond.dao.BrandDaoImplTest@50085d9c]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-06T19:03:50Z" finished-at="2017-01-06T19:03:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.stores.app.storesecond.dao.BrandDaoImplTest@50085d9c]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2017-01-06T19:03:50Z" finished-at="2017-01-06T19:03:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.stores.app.storesecond.dao.BrandDaoImplTest.findAllBrands()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.stores.app.storesecond.dao.BrandDaoImplTest@50085d9c]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-06T19:03:50Z" finished-at="2017-01-06T19:03:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="findBrandById()[pri:0, instance:com.stores.app.storesecond.dao.BrandDaoImplTest@50085d9c]" name="findBrandById" duration-ms="1" started-at="2017-01-06T19:03:50Z" finished-at="2017-01-06T19:03:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findBrandById -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.stores.app.storesecond.dao.BrandDaoImplTest@50085d9c]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-06T19:03:50Z" finished-at="2017-01-06T19:03:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.stores.app.storesecond.dao.BrandDaoImplTest@50085d9c]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-01-06T19:03:50Z" finished-at="2017-01-06T19:03:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.stores.app.storesecond.dao.BrandDaoImplTest.findBrandById()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.stores.app.storesecond.dao.BrandDaoImplTest@50085d9c]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-06T19:03:50Z" finished-at="2017-01-06T19:03:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.stores.app.storesecond.dao.BrandDaoImplTest@50085d9c]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-06T19:03:50Z" finished-at="2017-01-06T19:03:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="findById()[pri:0, instance:com.stores.app.storesecond.dao.BrandDaoImplTest@50085d9c]" name="findById" duration-ms="0" started-at="2017-01-06T19:03:50Z" finished-at="2017-01-06T19:03:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findById -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.stores.app.storesecond.dao.BrandDaoImplTest@50085d9c]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2017-01-06T19:03:50Z" finished-at="2017-01-06T19:03:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.stores.app.storesecond.dao.BrandDaoImplTest.findById()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.stores.app.storesecond.dao.BrandDaoImplTest@50085d9c]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-01-06T19:03:50Z" finished-at="2017-01-06T19:03:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:com.stores.app.storesecond.dao.BrandDaoImplTest@50085d9c]" name="setUp" is-config="true" duration-ms="0" started-at="2017-01-06T19:03:50Z" finished-at="2017-01-06T19:03:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="saveBrand()[pri:0, instance:com.stores.app.storesecond.dao.BrandDaoImplTest@50085d9c]" name="saveBrand" duration-ms="0" started-at="2017-01-06T19:03:50Z" finished-at="2017-01-06T19:03:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- saveBrand -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:com.stores.app.storesecond.dao.BrandDaoImplTest@50085d9c]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2017-01-06T19:03:50Z" finished-at="2017-01-06T19:03:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.stores.app.storesecond.dao.BrandDaoImplTest@50085d9c]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2017-01-06T19:03:50Z" finished-at="2017-01-06T19:03:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.stores.app.storesecond.dao.BrandDaoImplTest.saveBrand()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
      </class> <!-- com.stores.app.storesecond.dao.BrandDaoImplTest -->
      <class name="com.stores.app.storesecond.service.UserServiceImplTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.stores.app.storesecond.service.UserServiceImplTest@2e71240b]" name="setUp" is-config="true" duration-ms="6" started-at="2017-01-06T19:03:50Z" finished-at="2017-01-06T19:03:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="deleteUserById()[pri:0, instance:com.stores.app.storesecond.service.UserServiceImplTest@2e71240b]" name="deleteUserById" duration-ms="2" started-at="2017-01-06T19:03:50Z" finished-at="2017-01-06T19:03:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUserById -->
        <test-method status="PASS" signature="findAllUsers()[pri:0, instance:com.stores.app.storesecond.service.UserServiceImplTest@2e71240b]" name="findAllUsers" duration-ms="1" started-at="2017-01-06T19:03:50Z" finished-at="2017-01-06T19:03:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findAllUsers -->
        <test-method status="PASS" signature="findById()[pri:0, instance:com.stores.app.storesecond.service.UserServiceImplTest@2e71240b]" name="findById" duration-ms="1" started-at="2017-01-06T19:03:50Z" finished-at="2017-01-06T19:03:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findById -->
        <test-method status="PASS" signature="findUserById()[pri:0, instance:com.stores.app.storesecond.service.UserServiceImplTest@2e71240b]" name="findUserById" duration-ms="1" started-at="2017-01-06T19:03:50Z" finished-at="2017-01-06T19:03:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findUserById -->
        <test-method status="PASS" signature="saveColour()[pri:0, instance:com.stores.app.storesecond.service.UserServiceImplTest@2e71240b]" name="saveColour" duration-ms="1" started-at="2017-01-06T19:03:50Z" finished-at="2017-01-06T19:03:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- saveColour -->
        <test-method status="PASS" signature="updateUser()[pri:0, instance:com.stores.app.storesecond.service.UserServiceImplTest@2e71240b]" name="updateUser" duration-ms="1" started-at="2017-01-06T19:03:50Z" finished-at="2017-01-06T19:03:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateUser -->
      </class> <!-- com.stores.app.storesecond.service.UserServiceImplTest -->
      <class name="com.stores.app.storesecond.controller.AppControllerTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.stores.app.storesecond.controller.AppControllerTest@6f6efa4f]" name="setUp" is-config="true" duration-ms="59" started-at="2017-01-06T19:03:48Z" finished-at="2017-01-06T19:03:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="deleteBrand()[pri:0, instance:com.stores.app.storesecond.controller.AppControllerTest@6f6efa4f]" name="deleteBrand" duration-ms="2" started-at="2017-01-06T19:03:48Z" finished-at="2017-01-06T19:03:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBrand -->
        <test-method status="PASS" signature="deleteCategory()[pri:0, instance:com.stores.app.storesecond.controller.AppControllerTest@6f6efa4f]" name="deleteCategory" duration-ms="2" started-at="2017-01-06T19:03:48Z" finished-at="2017-01-06T19:03:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteCategory -->
        <test-method status="PASS" signature="deleteColour()[pri:0, instance:com.stores.app.storesecond.controller.AppControllerTest@6f6efa4f]" name="deleteColour" duration-ms="2" started-at="2017-01-06T19:03:48Z" finished-at="2017-01-06T19:03:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteColour -->
        <test-method status="PASS" signature="deleteItem()[pri:0, instance:com.stores.app.storesecond.controller.AppControllerTest@6f6efa4f]" name="deleteItem" duration-ms="2" started-at="2017-01-06T19:03:48Z" finished-at="2017-01-06T19:03:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteItem -->
        <test-method status="PASS" signature="deleteUser()[pri:0, instance:com.stores.app.storesecond.controller.AppControllerTest@6f6efa4f]" name="deleteUser" duration-ms="2" started-at="2017-01-06T19:03:48Z" finished-at="2017-01-06T19:03:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUser -->
        <test-method status="PASS" signature="editBrand()[pri:0, instance:com.stores.app.storesecond.controller.AppControllerTest@6f6efa4f]" name="editBrand" duration-ms="39" started-at="2017-01-06T19:03:48Z" finished-at="2017-01-06T19:03:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editBrand -->
        <test-method status="PASS" signature="editCategory()[pri:0, instance:com.stores.app.storesecond.controller.AppControllerTest@6f6efa4f]" name="editCategory" duration-ms="2" started-at="2017-01-06T19:03:48Z" finished-at="2017-01-06T19:03:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editCategory -->
        <test-method status="PASS" signature="editColour()[pri:0, instance:com.stores.app.storesecond.controller.AppControllerTest@6f6efa4f]" name="editColour" duration-ms="2" started-at="2017-01-06T19:03:48Z" finished-at="2017-01-06T19:03:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editColour -->
        <test-method status="PASS" signature="editItem()[pri:0, instance:com.stores.app.storesecond.controller.AppControllerTest@6f6efa4f]" name="editItem" duration-ms="2" started-at="2017-01-06T19:03:48Z" finished-at="2017-01-06T19:03:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editItem -->
        <test-method status="PASS" signature="editUser()[pri:0, instance:com.stores.app.storesecond.controller.AppControllerTest@6f6efa4f]" name="editUser" duration-ms="1" started-at="2017-01-06T19:03:48Z" finished-at="2017-01-06T19:03:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editUser -->
        <test-method status="PASS" signature="listBrands()[pri:0, instance:com.stores.app.storesecond.controller.AppControllerTest@6f6efa4f]" name="listBrands" duration-ms="1" started-at="2017-01-06T19:03:48Z" finished-at="2017-01-06T19:03:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listBrands -->
        <test-method status="PASS" signature="listCategories()[pri:0, instance:com.stores.app.storesecond.controller.AppControllerTest@6f6efa4f]" name="listCategories" duration-ms="2" started-at="2017-01-06T19:03:48Z" finished-at="2017-01-06T19:03:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listCategories -->
        <test-method status="PASS" signature="listColours()[pri:0, instance:com.stores.app.storesecond.controller.AppControllerTest@6f6efa4f]" name="listColours" duration-ms="1" started-at="2017-01-06T19:03:48Z" finished-at="2017-01-06T19:03:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listColours -->
        <test-method status="PASS" signature="listItems()[pri:0, instance:com.stores.app.storesecond.controller.AppControllerTest@6f6efa4f]" name="listItems" duration-ms="2" started-at="2017-01-06T19:03:48Z" finished-at="2017-01-06T19:03:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listItems -->
        <test-method status="PASS" signature="listUsers()[pri:0, instance:com.stores.app.storesecond.controller.AppControllerTest@6f6efa4f]" name="listUsers" duration-ms="1" started-at="2017-01-06T19:03:48Z" finished-at="2017-01-06T19:03:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listUsers -->
        <test-method status="PASS" signature="newBrand()[pri:0, instance:com.stores.app.storesecond.controller.AppControllerTest@6f6efa4f]" name="newBrand" duration-ms="1" started-at="2017-01-06T19:03:48Z" finished-at="2017-01-06T19:03:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newBrand -->
        <test-method status="PASS" signature="newCategory()[pri:0, instance:com.stores.app.storesecond.controller.AppControllerTest@6f6efa4f]" name="newCategory" duration-ms="1" started-at="2017-01-06T19:03:48Z" finished-at="2017-01-06T19:03:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newCategory -->
        <test-method status="PASS" signature="newColour()[pri:0, instance:com.stores.app.storesecond.controller.AppControllerTest@6f6efa4f]" name="newColour" duration-ms="1" started-at="2017-01-06T19:03:48Z" finished-at="2017-01-06T19:03:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newColour -->
        <test-method status="PASS" signature="newItem()[pri:0, instance:com.stores.app.storesecond.controller.AppControllerTest@6f6efa4f]" name="newItem" duration-ms="1" started-at="2017-01-06T19:03:48Z" finished-at="2017-01-06T19:03:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newItem -->
        <test-method status="PASS" signature="newUser()[pri:0, instance:com.stores.app.storesecond.controller.AppControllerTest@6f6efa4f]" name="newUser" duration-ms="1" started-at="2017-01-06T19:03:48Z" finished-at="2017-01-06T19:03:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newUser -->
        <test-method status="PASS" signature="saveBrandWithValidationError()[pri:0, instance:com.stores.app.storesecond.controller.AppControllerTest@6f6efa4f]" name="saveBrandWithValidationError" duration-ms="2" started-at="2017-01-06T19:03:48Z" finished-at="2017-01-06T19:03:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- saveBrandWithValidationError -->
        <test-method status="PASS" signature="saveCategoryWithValidationError()[pri:0, instance:com.stores.app.storesecond.controller.AppControllerTest@6f6efa4f]" name="saveCategoryWithValidationError" duration-ms="1" started-at="2017-01-06T19:03:48Z" finished-at="2017-01-06T19:03:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- saveCategoryWithValidationError -->
        <test-method status="PASS" signature="saveColourWithValidationError()[pri:0, instance:com.stores.app.storesecond.controller.AppControllerTest@6f6efa4f]" name="saveColourWithValidationError" duration-ms="1" started-at="2017-01-06T19:03:48Z" finished-at="2017-01-06T19:03:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- saveColourWithValidationError -->
        <test-method status="PASS" signature="saveItemWithValidationError()[pri:0, instance:com.stores.app.storesecond.controller.AppControllerTest@6f6efa4f]" name="saveItemWithValidationError" duration-ms="1" started-at="2017-01-06T19:03:48Z" finished-at="2017-01-06T19:03:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- saveItemWithValidationError -->
        <test-method status="PASS" signature="saveUserWithValidationError()[pri:0, instance:com.stores.app.storesecond.controller.AppControllerTest@6f6efa4f]" name="saveUserWithValidationError" duration-ms="0" started-at="2017-01-06T19:03:48Z" finished-at="2017-01-06T19:03:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- saveUserWithValidationError -->
        <test-method status="PASS" signature="updateBrandWithValidationError()[pri:0, instance:com.stores.app.storesecond.controller.AppControllerTest@6f6efa4f]" name="updateBrandWithValidationError" duration-ms="1" started-at="2017-01-06T19:03:48Z" finished-at="2017-01-06T19:03:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateBrandWithValidationError -->
        <test-method status="PASS" signature="updateCategoryWithValidationError()[pri:0, instance:com.stores.app.storesecond.controller.AppControllerTest@6f6efa4f]" name="updateCategoryWithValidationError" duration-ms="1" started-at="2017-01-06T19:03:48Z" finished-at="2017-01-06T19:03:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateCategoryWithValidationError -->
        <test-method status="PASS" signature="updateColourWithValidationError()[pri:0, instance:com.stores.app.storesecond.controller.AppControllerTest@6f6efa4f]" name="updateColourWithValidationError" duration-ms="2" started-at="2017-01-06T19:03:48Z" finished-at="2017-01-06T19:03:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateColourWithValidationError -->
        <test-method status="PASS" signature="updateItemWithValidationError()[pri:0, instance:com.stores.app.storesecond.controller.AppControllerTest@6f6efa4f]" name="updateItemWithValidationError" duration-ms="2" started-at="2017-01-06T19:03:48Z" finished-at="2017-01-06T19:03:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateItemWithValidationError -->
        <test-method status="PASS" signature="updateUserWithValidationError()[pri:0, instance:com.stores.app.storesecond.controller.AppControllerTest@6f6efa4f]" name="updateUserWithValidationError" duration-ms="1" started-at="2017-01-06T19:03:48Z" finished-at="2017-01-06T19:03:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateUserWithValidationError -->
      </class> <!-- com.stores.app.storesecond.controller.AppControllerTest -->
      <class name="com.stores.app.storesecond.service.BrandServiceImplTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.stores.app.storesecond.service.BrandServiceImplTest@3bb9ca38]" name="setUp" is-config="true" duration-ms="466" started-at="2017-01-06T19:03:47Z" finished-at="2017-01-06T19:03:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="deleteBrandById()[pri:0, instance:com.stores.app.storesecond.service.BrandServiceImplTest@3bb9ca38]" name="deleteBrandById" duration-ms="31" started-at="2017-01-06T19:03:48Z" finished-at="2017-01-06T19:03:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBrandById -->
        <test-method status="PASS" signature="findAllBrands()[pri:0, instance:com.stores.app.storesecond.service.BrandServiceImplTest@3bb9ca38]" name="findAllBrands" duration-ms="7" started-at="2017-01-06T19:03:48Z" finished-at="2017-01-06T19:03:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findAllBrands -->
        <test-method status="PASS" signature="findBrandById()[pri:0, instance:com.stores.app.storesecond.service.BrandServiceImplTest@3bb9ca38]" name="findBrandById" duration-ms="2" started-at="2017-01-06T19:03:48Z" finished-at="2017-01-06T19:03:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findBrandById -->
        <test-method status="PASS" signature="findById()[pri:0, instance:com.stores.app.storesecond.service.BrandServiceImplTest@3bb9ca38]" name="findById" duration-ms="2" started-at="2017-01-06T19:03:48Z" finished-at="2017-01-06T19:03:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findById -->
        <test-method status="PASS" signature="saveBrand()[pri:0, instance:com.stores.app.storesecond.service.BrandServiceImplTest@3bb9ca38]" name="saveBrand" duration-ms="2" started-at="2017-01-06T19:03:48Z" finished-at="2017-01-06T19:03:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- saveBrand -->
        <test-method status="PASS" signature="updateBrand()[pri:0, instance:com.stores.app.storesecond.service.BrandServiceImplTest@3bb9ca38]" name="updateBrand" duration-ms="2" started-at="2017-01-06T19:03:48Z" finished-at="2017-01-06T19:03:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateBrand -->
      </class> <!-- com.stores.app.storesecond.service.BrandServiceImplTest -->
      <class name="com.stores.app.storesecond.service.CategoryServiceImplTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.stores.app.storesecond.service.CategoryServiceImplTest@5934153e]" name="setUp" is-config="true" duration-ms="6" started-at="2017-01-06T19:03:48Z" finished-at="2017-01-06T19:03:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="deleteBrandById()[pri:0, instance:com.stores.app.storesecond.service.CategoryServiceImplTest@5934153e]" name="deleteBrandById" duration-ms="2" started-at="2017-01-06T19:03:48Z" finished-at="2017-01-06T19:03:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBrandById -->
        <test-method status="PASS" signature="findAllCategories()[pri:0, instance:com.stores.app.storesecond.service.CategoryServiceImplTest@5934153e]" name="findAllCategories" duration-ms="1" started-at="2017-01-06T19:03:48Z" finished-at="2017-01-06T19:03:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findAllCategories -->
        <test-method status="PASS" signature="findById()[pri:0, instance:com.stores.app.storesecond.service.CategoryServiceImplTest@5934153e]" name="findById" duration-ms="2" started-at="2017-01-06T19:03:48Z" finished-at="2017-01-06T19:03:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findById -->
        <test-method status="PASS" signature="findCategoryById()[pri:0, instance:com.stores.app.storesecond.service.CategoryServiceImplTest@5934153e]" name="findCategoryById" duration-ms="1" started-at="2017-01-06T19:03:48Z" finished-at="2017-01-06T19:03:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findCategoryById -->
        <test-method status="PASS" signature="saveCategory()[pri:0, instance:com.stores.app.storesecond.service.CategoryServiceImplTest@5934153e]" name="saveCategory" duration-ms="1" started-at="2017-01-06T19:03:48Z" finished-at="2017-01-06T19:03:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- saveCategory -->
        <test-method status="PASS" signature="updateCategory()[pri:0, instance:com.stores.app.storesecond.service.CategoryServiceImplTest@5934153e]" name="updateCategory" duration-ms="2" started-at="2017-01-06T19:03:48Z" finished-at="2017-01-06T19:03:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateCategory -->
      </class> <!-- com.stores.app.storesecond.service.CategoryServiceImplTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
